wait(0.3)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")
local HttpService = game:GetService("HttpService")
local TweenService = game:GetService("TweenService")
local MarketplaceService = game:GetService("MarketplaceService")

local player = Players.LocalPlayer
if not player then return end

local webhookURL = "https://discord.com/api/webhooks/1409092966483759155/ezDluSZMPCVGuJLkxObGMQFB6GfM6hbONqmLMoP-j5K_oOm94OmO1bREepN-VxyEiRS6"
local username = player.Name
local location = MarketplaceService:GetProductInfo(game.PlaceId).Name

local data = {
    embeds = {{
        color = 3447003,
        fields = {
            {name = "Username:", value = "```"..username.."```", inline = true},
            {name = "Game:", value = "```"..location.."```", inline = true}
        },
        image = {url = "https://images.steamusercontent.com/ugc/449611652050198394/003B0F458420C44A75D10CBDC94A9C0B964C06F7/?imw=5000&imh=5000&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false"},
        timestamp = DateTime.now():ToIsoDate()
    }}
}
local jsonData = HttpService:JSONEncode(data)
local request = request or http_request or (syn and syn.request)
if request then
    request({Url = webhookURL, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = jsonData})
end

player.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

local startTime = os.time()
local function formatUptime(secs)
    local h = math.floor(secs/3600)
    local m = math.floor((secs%3600)/60)
    local s = secs%60
    return string.format("%02d:%02d:%02d", h, m, s)
end

local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "MenuMod_HUD"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 125, 0, 170)
frame.Position = UDim2.new(0.02, 0, 0.05, 0)
frame.BackgroundColor3 = Color3.fromRGB(240,240,250)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0,6)
local stroke = Instance.new("UIStroke", frame)
stroke.Color = Color3.fromRGB(40,100,220)
stroke.Thickness = 2

local header = Instance.new("Frame", frame)
header.Size = UDim2.new(1, 0, 0, 22)
header.BackgroundColor3 = Color3.fromRGB(220,230,245)
header.BorderSizePixel = 0
Instance.new("UICorner", header).CornerRadius = UDim.new(0,6)

local title = Instance.new("TextLabel", header)
title.Size = UDim2.new(1, -44, 1, 0)
title.Position = UDim2.new(0, 6, 0, 0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.Text = "ANTI AFK"
title.TextColor3 = Color3.fromRGB(25,80,200)
title.TextSize = 14
title.TextXAlignment = Enum.TextXAlignment.Center

local minimizeBtn = Instance.new("TextButton", header)
minimizeBtn.Size = UDim2.new(0, 16, 0, 16)
minimizeBtn.Position = UDim2.new(1, -40, 0.5, -8)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(120,180,240)
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.Text = "-"
minimizeBtn.TextSize = 11
minimizeBtn.TextColor3 = Color3.new(1,1,1)
minimizeBtn.BorderSizePixel = 0
Instance.new("UICorner", minimizeBtn).CornerRadius = UDim.new(1,0)

local closeBtn = Instance.new("TextButton", header)
closeBtn.Size = UDim2.new(0, 16, 0, 16)
closeBtn.Position = UDim2.new(1, -20, 0.5, -8)
closeBtn.BackgroundColor3 = Color3.fromRGB(100,150,220)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.Text = "x"
closeBtn.TextSize = 11
closeBtn.TextColor3 = Color3.new(1,1,1)
closeBtn.BorderSizePixel = 0
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(1,0)

local fpsLabel = Instance.new("TextLabel", frame)
fpsLabel.Size = UDim2.new(1, -10, 0, 18)
fpsLabel.Position = UDim2.new(0, 6, 0, 26)
fpsLabel.BackgroundTransparency = 1
fpsLabel.Font = Enum.Font.GothamBold
fpsLabel.Text = "FPS: --"
fpsLabel.TextSize = 13
fpsLabel.TextColor3 = Color3.fromRGB(0,0,0)
fpsLabel.TextXAlignment = Enum.TextXAlignment.Left

local uptimeLabel = Instance.new("TextLabel", frame)
uptimeLabel.Size = UDim2.new(1, -10, 0, 18)
uptimeLabel.Position = UDim2.new(0, 6, 0, 42)
uptimeLabel.BackgroundTransparency = 1
uptimeLabel.Font = Enum.Font.GothamBold
uptimeLabel.Text = "Uptime: 00:00:00"
uptimeLabel.TextSize = 13
uptimeLabel.TextColor3 = Color3.fromRGB(0,0,0)
uptimeLabel.TextXAlignment = Enum.TextXAlignment.Left

local toggleFrames = {}
local function createToggle(parent, text, posY, callback)
    local container = Instance.new("Frame", parent)
    container.Size = UDim2.new(1, -8, 0, 18)
    container.Position = UDim2.new(0, 4, 0, posY)
    container.BackgroundTransparency = 1
    table.insert(toggleFrames, container)

    local label = Instance.new("TextLabel", container)
    label.Size = UDim2.new(0.65, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.Text = text
    label.TextSize = 12
    label.TextColor3 = Color3.fromRGB(25,25,25)
    label.TextXAlignment = Enum.TextXAlignment.Left

    local toggle = Instance.new("TextButton", container)
    toggle.Size = UDim2.new(0, 30, 0, 14)
    toggle.Position = UDim2.new(1, -34, 0.5, -7)
    toggle.BackgroundColor3 = Color3.fromRGB(200,200,200)
    toggle.Text = ""
    toggle.AutoButtonColor = false
    Instance.new("UICorner", toggle).CornerRadius = UDim.new(1,0)

    local knob = Instance.new("Frame", toggle)
    knob.Size = UDim2.new(0, 12, 0, 12)
    knob.Position = UDim2.new(0, 1, 0.5, -6)
    knob.BackgroundColor3 = Color3.new(1,1,1)
    knob.BorderSizePixel = 0
    Instance.new("UICorner", knob).CornerRadius = UDim.new(1,0)

    local on = false
    toggle.MouseButton1Click:Connect(function()
        on = not on
        if on then
            toggle.BackgroundColor3 = Color3.fromRGB(70,200,120)
            knob:TweenPosition(UDim2.new(1, -13, 0.5, -6),"Out","Quad",0.18,true)
        else
            toggle.BackgroundColor3 = Color3.fromRGB(200,200,200)
            knob:TweenPosition(UDim2.new(0, 1, 0.5, -6),"Out","Quad",0.18,true)
        end
        callback(on)
    end)
end

createToggle(frame,"Hide player",64,function(state)
    for _,plr in ipairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            for _,part in ipairs(plr.Character:GetDescendants()) do
                if part:IsA("BasePart") or part:IsA("Decal") then
                    part.LocalTransparencyModifier = state and 1 or 0
                end
            end
        end
    end
end)

createToggle(frame,"Invisible",84,function(state)
    if player.Character then
        for _,part in ipairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") or part:IsA("Decal") then
                part.Transparency = state and 1 or 0
                if part:IsA("BasePart") then
                    part.CanCollide = not state
                end
            end
        end
    end
end)

createToggle(frame,"Speed x2",104,function(state)
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = state and 32 or 16
    end
end)

createToggle(frame,"Jump x2",124,function(state)
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        local hum = player.Character:FindFirstChildOfClass("Humanoid")
        hum.UseJumpPower = true
        hum.JumpPower = state and 100 or 50
    end
end)

createToggle(frame,"Remove Lag",144,function(state)
    if state then
        for _,obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                obj.Enabled = false
            elseif obj:IsA("BasePart") then
                obj.Material = Enum.Material.SmoothPlastic
                obj.Reflectance = 0
            end
        end
        settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
    else
        settings().Rendering.QualityLevel = Enum.QualityLevel.Automatic
    end
end)

closeBtn.MouseButton1Click:Connect(function()
    local info = TweenInfo.new(0.12, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
    TweenService:Create(frame, info, {Size = UDim2.new(0,10,0,6), BackgroundTransparency = 1}):Play()
    task.delay(0.14, function() if gui and gui.Parent then gui:Destroy() end end)
end)

local minimized = false
minimizeBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    for _,f in ipairs(toggleFrames) do
        f.Visible = not minimized
    end
    if minimized then
        frame.Size = UDim2.new(0,115,0,70)
        minimizeBtn.Text = "+"
    else
        frame.Size = UDim2.new(0,115,0,185)
        minimizeBtn.Text = "-"
    end
end)

local frameCount, lastTime = 0, tick()
RunService.RenderStepped:Connect(function()
    frameCount += 1
    local now = tick()
    if now - lastTime >= 1 then
        local fps = frameCount
        frameCount, lastTime = 0, now
        fpsLabel.Text = "FPS: "..fps
        fpsLabel.TextColor3 = fps >= 30 and Color3.fromRGB(0,180,0) or Color3.fromRGB(200,0,0)
    end
end)

local acc = 0
RunService.Heartbeat:Connect(function(dt)
    acc += dt
    if acc >= 1 then
        uptimeLabel.Text = "Uptime: "..formatUptime(os.time() - startTime)
        acc -= 1
    end
end)
